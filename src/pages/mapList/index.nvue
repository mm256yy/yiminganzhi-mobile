<template>
	<view class="map-wrap" :style="{ paddingTop: `${statusBarHeight}px` }">
		<image class="bg" src="@/static/images/common_bg.png" mode="widthFix" />
		<view class="common-header">
		  <view class="back-box" @click="onBack">
		    <uni-icons type="back" color="#ffffff" size="14rpx" />
		  </view>
		  <text class="tit">地图查看</text>
		  <text class="right-btn"/>
		</view>
		<view class="map-content">
			<map
				class="map"
				:enable-satellite="true"
				:enable-overlooking="true"
				:latitude="centerLocation.latitude"
				:longitude="centerLocation.longitude"
				:polygons="polygons"
				:markers="markers"
				:scale="14"
				@markertap="markerTap"
			></map>
		</view>
		<map-info v-if="show" :data-info="mapData" @close="close" />
	</view>
</template>

<script lang="ts" setup>
import { ref, onMounted } from 'vue'
import MapInfo from './components/MapInfo'
import { routerBack } from '@/utils'
import shuangxi from './shuangxi'
import iconPath from './iconPath'

const sysInfo = uni.getSystemInfoSync()
const statusBarHeight = sysInfo.statusBarHeight || 0
const mapData = ref<any>({})
const show = ref<boolean>(false)

interface LocationType {
  longitude: number
  latitude: number
}

// 初始地图坐标
const centerLocation = ref<LocationType>({
	latitude: 29.43737204801587, // 纬度
	longitude: 119.766446455085699 // 经度
})

const polygons = ref<any>([])

const markers = ref<any[]>([
  {
		id: 1,
    iconPath: iconPath,
    width: 50,
    height: 50,
    latitude: 29.43737204801587,
    longitude: 119.766446455085699
  }
])

/**
 * 初始化处理区域坐标数据为指定格式
 * @param{Object} obj 坐标数据
 */ 
const initCoordinateData = (obj: any) => {
	let polygonsArr: any = []
	if (obj && JSON.stringify(obj) !== '{}') {
		const features = obj.features ? obj.features : []
		features && features.map((item: any) => {
			item.geometry.coordinates[0].map((coord: any) => {
				polygonsArr.push({
					points: genArr(coord),
					strokeNumber: 10,
					strokeColor: '#E71919',
					fillColor: 'transparent'
				})
			})
		})
		polygons.value = polygonsArr
	}
}

/**
 * 生成一个新的数组
 * @param{Array} arr 原数组
 */
const genArr = (arr: any) => {
	let newArr: any = []
	if (arr && arr.length > 0) {
		arr.map((item: any) => {
			newArr.push({
				longitude: item[0],
				latitude: item[1]
			})
		})
		return newArr
	} else {
		return newArr
	}
}

const markerTap = (e: any) => {
	console.log('e:', e)
	show.value = true
}

// 关闭居民户简介/自然村简介弹窗
const close = () => {
	show.value = false
}

const onBack = () => {
  routerBack()
}

onMounted(() => {
	initCoordinateData(shuangxi)
})
</script>

<style lang="scss" scoped>
.map-wrap {
  position: relative;
  display: flex;
  flex-direction: column;
  flex: 1;
  width: 750rpx;

  .bg {
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    width: 750rpx;
    height: 100%;
  }

  .common-header {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    height: 33rpx;
    padding: 0 10rpx 0 6rpx;

    .back-box {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 26rpx;
      height: 26rpx;
    }

    .tit {
      font-size: 15rpx;
      font-weight: 600;
      color: #ffffff;
    }
    .right-btn {
      font-size: 12rpx;
      color: #ffffff;
    }
  }

  .map-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    width: 750rpx;
  }
  // 默认撑满
  .map {
    flex: 1;
    width: 750rpx;

    /* #ifdef H5 */
    ::v-deep.amap-logo {
      display: none !important;
    }

    ::v-deep.amap-copyright {
      display: none !important;
    }
    /* #endif */
  }

  .map-info {
    position: absolute;
    z-index: 1;
    top: 100rpx;
    left: 300rpx;
  }
}
</style>
